<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>ParallelSort</name></assembly>
<members>
<member name="M:ParallelSort.Sort.parallelQuickSort(System.Int32[])">
<summary>
 Parallel implementation of in-place QuickSort algorithm (using Tasks)
</summary>
</member>
<member name="M:ParallelSort.Sort.sequentialQuickSort(System.Int32[])">
<summary>
 Sequential implementation of in-place QuickSort algorithm
</summary>
</member>
<member name="M:ParallelSort.Sort.insertionSort(System.Int32[],System.Int32,System.Int32)">
<summary>
 Insertion sort which is more efficient for small arrays
 (it is used when the length is smaller than &apos;threshold&apos;)
</summary>
</member>
<member name="M:ParallelSort.Sort.swap``1(``0[],System.Int32,System.Int32)">
<summary>
 Swap elements of the array at the specified indices
</summary>
</member>
<member name="P:ParallelSort.Sort.threshold">
<summary>
 Array length to use InsertionSort instead of SequentialQuickSort
</summary>
</member>
<member name="M:Program.printElements(System.Int32,System.Int32[])">
<summary>
 Print the first and last few elements in given array
</summary>
</member>
<member name="M:Program.makeArray(System.Int32,System.Int32)">
<summary>
 Create array of given length and populate with random integers 
</summary>
</member>
</members>
</doc>
